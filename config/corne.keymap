/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define MEDIA 3

// This is ok if only a single sticky key is used.
// Create new behavior if multiple &sk is used.
&sk {
  quick-release;
};

/ {
  behaviors {
td_caps: tap_dance_caps {
           compatible = "zmk,behavior-tap-dance";
#binding-cells = <0>;
           tapping-term-ms = <200>;
           bindings = <&sk LSHFT>, <&kp CAPSLOCK>;
         };

  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      // -----------------------------------------------------------------------------------------
      // |  TAB |  '"  |  ,<  |  .>  |  p  |  y  |   |  f  |  g   |  c  |  r  |  l  | BKSP |
      // | CTRL |  a  |  o  |  e  |  u  |  i  |   |  d  |  h   |  t  |  n  |  s  |  ENT   |
      // | SHFT |  ;:  |  q  |  j  |  k  |  x  |   | b  |  m   |  w  |  v  |  z  | shift  |
      //                    | GUI | LWR | ESC |   | spc | RSE  | ALT GR |
      bindings = <
        &kp TAB   &kp SQT &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G  &kp C     &kp R   &kp L    &kp BSPC
        &kp LCTRL &kp A &kp O &kp E &kp U &kp I   &kp D &kp H  &kp T     &kp N   &kp S &kp RET
        &td_caps &kp SEMI &kp Q &kp J &kp K &kp X   &kp B &kp M  &kp W &kp V &kp Z &kp RSHIFT
        &kp LGUI &mo LOWER &kp ESC   &kp RET &mo RAISE &kp RALT
        >;
    };

    lower_layer {

      // -----------------------------------------------------------------------------------------
      // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
      // | BTCLR| HOME | END | PG_DN | PG_UP | DEL |   | LFT | DWN |  UP | RGT |     |      |
      // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
      //                    | GUI |     | SPC |   | ENT |     | ALT |
      bindings = <
        &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
        &kp LCTRL &kp HOME &kp END &kp PG_DN &kp PG_UP &kp DEL   &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp F12 
        &kp LSHFT  &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &kp F11
        &kp LGUI     &trans       &kp ESC      &kp SPACE  &mo MEDIA   &kp RALT
        >;
    };

    raise_layer {

      // -----------------------------------------------------------------------------------------
      // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
      // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
      // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
      //                    | GUI |     | SPC |   | ENT |     | ALT |
      bindings = <
        &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
        &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp LBKT  &kp RBKT &kp FSLH &kp EQUAL  &kp BSLH &kp MINUS
        &kp LSHFT &kp PSCRN   &kp INS &trans   &trans   &trans      &kp LBRC        &kp RBRC &kp UNDER &kp LBKT   &trans  &kp GRAVE
        &kp LGUI &mo MEDIA   &kp ESC   &kp SPACE   &trans    &kp RALT
        >;
    };

    media_layer {
      // +------------------------------------------------------------------------------------+
      // |   TAB |     |     |     |     |     |         |     |     |     |     |     | BSPC |
      // |BT CLR | BT1 | BT2 | BT3 | BT4 | BT5 |         | PREV|> || | NEXT|     |     |      |
      // |  CTLR |PW ON|PWOFF|     |     |     |         | MUTE| VOL-| VOL+|     |     |  ESC |
      //                        | GUI |     | SPC |  | ENT |     | ALT |
      // +------------------------------------------------------------------------------------+
      bindings = <
        &kp TAB    &trans            &trans              &trans       &trans       &trans       &trans     &trans       &trans       &trans &trans &kp BSPC
        &bt BT_CLR &bt BT_SEL 0      &bt BT_SEL 1        &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp C_PREV &kp C_PP     &kp C_NEXT   &trans &trans &trans
        &kp LCTRL  &trans  &trans   &trans       &trans       &trans       &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans &trans &kp ESC
        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
        >;
    };


  };
};
